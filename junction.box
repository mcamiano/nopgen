# Shell script to provide coupling definitions.
#
# Note: This command file is executed in the caller's current shell. 
#       So NEVER, EVER do an "exit" from here or any script called with 
#       the "." shell operator.
#
# Environmental Parameters required are commented at end of each line.
#
# Implimentation Notes:
#   1. For data intensive applications, it is recommended that you create a 
#      set of tools with which to access the data dictionary, and use them
#      for making couplings.
#   2. For function strong applications, well... there will probably be more
#      transitive code dependancies than database dependancies.  Re-usable 
#      code blocks can be factored out and placed in a code library.  I
#      haven't set up the scripts to manage codegen-preprocessed text inclusion,
#      but there is no reason they can't be written.  The coupling to do
#      the insertion would be parameterized, and would pre-process the text
#      through codegen before inserting it.  It could also be written to
#      obtain the blocks from a "code dictionary" ( ala data dictionary ),
#      a librarian/revision utility ( aka ar, tar/sccs, rcs... ), or simply
#      from the OS provided file system services.
#   3. Single quotes will protect double-quotes from the shell.

MasterTableColumns="dbcolumn $TABLE"         # Set TABLE to master table name

MasterTableName="$TABLE"                     # Set TABLE to master table name

MasterTableKey="dbkey $TABLE"                # Set TABLE to master table name

DetailTableColumns="dbcolumn $DETTABLE"      # Set DETTABLE to detail table name

DetailTablekey="dbkey $DETTABLE"             # Set DETTABLE to detail table name

CurrentDirList="$DIRCMD ."                   # Set DIRCMD to file list command

MenuOptions='echo \"Locate\" \"Add\" \"Update\" \"Remove\" \"Quit\"'
